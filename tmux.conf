
set -g default-terminal "screen-256color"

# color variables
COLOR0=#f3d116      # yellow debug
COLOR1=#20af81      # teal
COLOR2=#018058      # dark teal
COLOR3=#263033      # dark green gray bg
COLOR4=#d787d7      # magenta
COLOR5=#5f87d7      # blue
COLOR6=#74baac      # light teal

# pane border
set -g pane-border-style fg=$COLOR2
set -g pane-active-border-style fg=$COLOR4

# message text
set -g message-style bg=$COLOR3,fg=$COLOR4

# status line
set -g status-style bg=$COLOR3,fg=$COLOR1
set -g status-interval 1

# status left
# display hl color if prefix is entered
set -g status-left '#[bg=#263033]#[fg=#20af81]#{?client_prefix,#[bg=#20af81]#[fg=#263033] <#{client_session}> , <#{client_session}> }'
# check if pane is zoomed
set -ga status-left '#[bg=#263033]#[fg=#d787d7]#{?window_zoomed_flag, Z  ,}'

# window status
set-window-option -g window-status-style fg=$COLOR0,bg=default
set-window-option -g window-status-current-style fg=$COLOR0,bg=$COLOR0
set -g window-status-current-format "#[fg=$COLOR4]#[bg=$COLOR3][ #I: #W ]"
set -g window-status-format "#[fg=$COLOR2]#[bg=$COLOR3]  #I: #W  "

# status right
set -g status-right " #H "

# mouse scrolling
set-option -g mouse on

# custom binds
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

bind P paste-buffer

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# vim compatability
set -sg escape-time 10
set-option -g focus-events on
set-option -sa terminal-overrides ',XXX:RGB'
